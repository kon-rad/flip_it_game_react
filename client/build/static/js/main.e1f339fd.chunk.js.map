{"version":3,"sources":["components/Card.js","App.js","components/Header.js","index.js"],"names":["IMAGES","1","3","5","7","9","11","13","15","17","19","21","23","25","27","29","31","33","35","Card","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","icon","cardId","cardClassNames","concat","removed","flipped","react_default","a","createElement","className","onClick","cardClicked","Component","LEVEL_SIZE","EASY","MEDIUM","HARD","App","gameWonMessage","initGame","level","quitGame","cards","i","mapIdtoIndex","Array","push","components_Card","key","cardClickedHandler","length","j","Math","floor","random","_ref","_ref2","flippedMapIdtoIndex","keys","reduce","o","k","assign","defineProperty","setState","game","gameCards","remaining","tick","setInterval","time","state","renderCards","newCardId","freeze","selected","selectedCard","cardKey","selectedKey","showCard","setTimeout","removeCards","hideCards","missed","slice","renderGameWonMessage","String","prototype","toMMSS","sec","parseInt","minutes","seconds","finalTime","finalMissed","finalLevel","clearInterval","_this2","renderDashboard","Hard","href","id","routing","react_router_dom","Header","react_router","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1f339fd.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst IMAGES = {\n    1: 'mood',\n    3: 'motorcycle',\n    5: 'pets',\n    7: 'public',\n    9: 'wb_sunny',\n    11: 'trending_up',\n    13: 'shopping_cart',\n    15: 'school',\n    17: 'restaurant',\n    19: 'pan_tool',\n    21: 'flight_takeoff',\n    23: 'flash_on',\n    25: 'brightness_2',\n    27: 'directions_bike',\n    29: 'favorite',\n    31: 'filter_hdr',\n    33: 'grade',\n    35: 'home'\n};\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        const icon = IMAGES[this.props.cardId % 2 === 1 ? this.props.cardId : this.props.cardId + 1];\n        let cardClassNames = `card_box card_box-${this.props.cardId}`;\n        if (this.props.removed === true) {\n            cardClassNames += ' card_box__hide';\n        } else if (this.props.flipped === true) {\n            cardClassNames += ' card_box__active';\n        }\n\n        return (\n            <div\n                className={cardClassNames}\n                onClick={() => this.props.cardClicked(this.props.cardId)}\n            >\n                <div className=\"card_box__inner\">\n                    <div className=\"card_box__front\">\n                    </div>\n                    <div className=\"card_box__back\">\n                        <i className=\"large material-icons\">{icon}</i>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default Card;\n","import React, {Component} from 'react';\nimport Card from './components/Card';\n\nconst EASY = 'EASY';\nconst MEDIUM = 'MEDIUM';\nconst HARD = 'HARD';\n\nconst LEVEL_SIZE = {\n    EASY: 12,\n    MEDIUM: 24,\n    HARD: 36\n};\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            game: null,\n            selectedCard: null,\n            remaining: null,\n            gameCards: [],\n            mapIdtoIndex: [],\n            missed: 0,\n            time: 0,\n            freeze: false\n        };\n        String.prototype.toMMSS = function () {\n            let sec = parseInt(this, 10);\n            let minutes = Math.floor((sec - (Math.floor(sec / 3600) * 3600)) / 60);\n            let seconds = sec - (Math.floor(sec / 3600) * 3600) - (minutes * 60);\n\n            if (minutes < 10) {minutes = \"0\"+minutes;}\n            if (seconds < 10) {seconds = \"0\"+seconds;}\n            return minutes+':'+seconds;\n        }\n    }\n    tick;\n    gameWonMessage = '';\n\n    initGame = (level) => {\n        this.quitGame();\n        const cards = [];\n        let i = 0;\n        const mapIdtoIndex = new Array(LEVEL_SIZE[level]);\n        while (i < LEVEL_SIZE[level]) {\n            cards.push(\n                <Card key={i} cardId={i} cardClicked={this.cardClickedHandler} removed={false} flipped={false}/>\n            );\n            mapIdtoIndex[i] = i;\n            i++;\n        };\n\n        for (let i = cards.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [cards[i], cards[j]] = [cards[j], cards[i]];\n            [mapIdtoIndex[i], mapIdtoIndex[j]] = [mapIdtoIndex[j], mapIdtoIndex[i]];\n        }\n        const flippedMapIdtoIndex = Object.keys(mapIdtoIndex).reduce((o, k) => Object.assign({}, o, { [mapIdtoIndex[k]]: k }), {});\n        this.setState({ game: level, gameCards: cards, mapIdtoIndex: flippedMapIdtoIndex, remaining: LEVEL_SIZE[level] });\n        this.tick = setInterval(() => this.setState({ time: this.state.time + 1 }), 1000);\n    };\n\n    renderCards = () => {\n        if (this.state.game === null) {\n            return;\n        }\n        return this.state.gameCards;\n    };\n\n    cardClickedHandler = (newCardId) => {\n        if (this.state.freeze) return;\n        const selected = this.state.selectedCard;\n        const cardKey = newCardId % 2 === 1 ? newCardId : newCardId + 1;\n        const selectedKey = selected % 2 === 1 ? selected : selected + 1;\n        this.showCard(newCardId);\n        if (selected !== null) {\n            if (selected !== newCardId && selectedKey === cardKey) {\n                setTimeout(() => this.removeCards(selected, newCardId), 800);\n                this.setState({ freeze: true });\n            } else {\n                setTimeout(() => this.hideCards(selected, newCardId), 500);\n                this.setState({ missed: this.state.missed + 1, freeze: true });\n            }\n            this.setState({ selectedCard: null });\n        } else {\n            this.setState({ selectedCard: newCardId });\n        }\n    };\n\n    showCard(newCardId) {\n        const cards = this.state.gameCards.slice();\n        cards[this.state.mapIdtoIndex[newCardId]] = (\n          <Card key={newCardId} cardId={newCardId} cardClicked={this.cardClickedHandler} removed={false} flipped={true}/>\n        );\n        this.setState({ gameCards: cards });\n    };\n\n    hideCards(selected, newCardId) {\n        const cards = this.state.gameCards.slice();\n        cards[this.state.mapIdtoIndex[selected]] = (\n          <Card key={selected} cardId={selected} cardClicked={this.cardClickedHandler} removed={false} flipped={false}/>\n        );\n        cards[this.state.mapIdtoIndex[newCardId]] = (\n          <Card key={newCardId} cardId={newCardId} cardClicked={this.cardClickedHandler} removed={false} flipped={false}/>\n        );\n        this.setState({ gameCards: cards, freeze: false, selectedCard: null });\n    };\n\n    removeCards = (selected, cardId) => {\n        const cards = this.state.gameCards.slice();\n        cards[this.state.mapIdtoIndex[selected]] = (\n          <Card key={selected} cardId={selected} cardClicked={this.cardClickedHandler} removed={true} flipped={false}/>\n        );\n        cards[this.state.mapIdtoIndex[cardId]] = (\n          <Card key={cardId} cardId={cardId} cardClicked={this.cardClickedHandler} removed={true} flipped={false}/>\n        );\n\n        if (this.state.remaining - 2 <= 0) {\n            this.renderGameWonMessage();\n\n            return;\n        }\n        this.setState({ gameCards: cards, freeze: false, selectedCard: null, remaining: this.state.remaining - 2 });\n    };\n\n    renderGameWonMessage() {\n        const finalTime = (this.state.time + '').toMMSS();\n        const finalMissed = this.state.missed;\n        const finalLevel = this.state.game;\n        this.gameWonMessage = (\n          <div className=\"win_message\">\n              <h1>Great job!</h1>\n              <p>Level: {finalLevel}</p>\n              <p>Time: {finalTime}</p>\n              <p>Missed: {finalMissed}</p>\n          </div>\n        );\n        this.setState({ game: null, gameCards: [], missed: 0, remaining: 0, time: 0 });\n        clearInterval(this.tick);\n    }\n\n    renderDashboard() {\n        if (this.state.game === null) {\n            return;\n        }\n        return (\n          <p className=\"dashboard\" >Level: {this.state.game} Time: {(this.state.time +'').toMMSS()} Missed: {this.state.missed}</p>\n        )\n    }\n\n    quitGame() {\n        this.gameWonMessage = '';\n        this.setState({ game: null, gameCards: [], missed: 0, remaining: 0, time: 0 });\n        clearInterval(this.tick);\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"container\">\n                    <div className=\"card__col\">\n                        <div className=\"card blue-grey darken-1\">\n                            <div className=\"card-content white-text\">\n                                <span className=\"card-title\">Match Up Memory Card Game</span>\n                                <div className=\"card-action card__menu\">\n                                    <a onClick={() => this.initGame(EASY)} className=\"waves-effect waves-teal btn-flat\">Easy</a>\n                                    <a onClick={() => this.initGame(MEDIUM)} className=\"waves-effect waves-teal btn-flat\">Medium</a>\n                                    <a onClick={() => this.initGame(HARD)} className=\"waves-effect waves-teal btn-flat\">Hard</a>\n                                    <a onClick={() => this.quitGame()} className=\"waves-effect waves-teal btn-flat\">Quit</a>\n                                </div>\n                                {this.renderDashboard()}\n                            </div>\n                            <div className={`game ${this.state.game}`}>\n                                {this.renderCards()}\n                                {this.gameWonMessage}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, { Component } from 'react';\n\n\nclass Hard extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <nav>\n                    <div className=\"nav-wrapper\">\n                        <div className=\"container\">\n                            <a href=\"/\" className=\"brand-logo\">Match up</a>\n                            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                                <li><a href=\"/\">Home</a></li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\n\nexport default Hard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Header from './components/Header';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\n\nconst routing = (\n    <BrowserRouter>\n        <Header />\n        <div>\n            <Route exact path=\"/\" component={App} />\n        </div>\n    </BrowserRouter>\n);\nReactDOM.render(routing, document.getElementById('root'));\n"],"sourceRoot":""}